on:
  push:
    branches:
      - main
name: Publish Docs
jobs:
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'stuartwdouglas/ftl-charts'
          token: '${{ secrets.FTL_CHARTS_TOKEN }}'
          fetch-depth: 0
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: .ftl
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config pull.rebase true
      - name: Copy Charts
        run: |
          cp -r .ftl/charts/ charts/
          git add charts
          git commit -a -m "Update charts"
          git push
      - name: Init Hermit
        uses: cashapp/activate-hermit@v1.1.3
        with:
          working-directory: .ftl
      - name: repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add goharbor https://helm.goharbor.io

      - name: Run chart-releaser
        env:
          CR_TOKEN: "${{ secrets.FTL_CHARTS_TOKEN }}"
        shell: bash
        run: |
          owner=stuartwdouglas
          repo=ftl-charts
          
          args=(--owner "$owner" --repo "$repo")
          args+=(--charts-dir "charts")
          
          install="$RUNNER_TOOL_CACHE/cr/${{ inputs.version }}/$(uname -m)"
          echo "$install" >> "$GITHUB_PATH"
          args+=(--install-dir "$install")
          
          ./cr.sh "${args[@]}"
          
          if [[ -f changed_charts.txt ]]; then
              cat changed_charts.txt >> "$GITHUB_OUTPUT"
          fi
          if [[ -f chart_version.txt ]]; then
              cat chart_version.txt >> "$GITHUB_OUTPUT"
          fi
          rm -f changed_charts.txt chart_version.txt


